{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Higher Computing Science","text":"Welcome to SQA Higher Computer Science! <p>The SQA National Higher Computer Science course is an exciting program that will help you develop essential skills and knowledge in the world of technology. The course is divided into three main units: Software Design and Development, Computer Systems, and Database Design and Development.</p> <p>In Software Design and Development, you'll learn how to design, write, and test programs, which will help you solve real-world problems through coding. This is where you start to think like a programmer and use logic to create solutions.</p> <p>The Computer Systems unit will help you understand how computers work, from the hardware components to the software they run. You\u2019ll explore the physical parts of a computer, such as the CPU and memory, as well as the different ways information is stored and processed.</p> <p>Finally, in Database Design and Development, you\u2019ll learn to design and manage databases, which are used everywhere to organize and retrieve information. This unit will give you the skills to handle data efficiently and understand how information is managed in real-world applications.</p> <p>Each unit will build your skills, preparing you for further study or careers in technology, software development, cybersecurity, and many other fields.</p>"},{"location":"CS/","title":"Computer Systems","text":""},{"location":"CS/01-Data-Rep/","title":"Data Representation","text":""},{"location":"DDD/","title":"Database Design and Development","text":""},{"location":"SDD/","title":"Software Design and Development","text":""},{"location":"SDD/01-Development-Methodologies/","title":"Development Methodologies","text":""},{"location":"SDD/01-Development-Methodologies/#what-is-a-development-methodology","title":"What is a Development Methodology?","text":"<p>A Development Methodology is how you systematically approach solving and creating a solution to a problem.  Human nature is to jump in and start working without thinking and planning which can often lead to problems and errors.</p> <p>When developing Computer Systems there needs to be a lot of planning as real world systems are of a huge size, are complex and have massive technological importance in all areas of our lives. For example:</p> <p> Databases could contain millions of customers and be vital to a multi-million pound business. <p> Website could have billions of users and need to do hundreds of thousand transactions a day.   <p> A Website could have billions of users and need to do hundreds of thousand transactions a day.  <p> Software programs can easily have multi-millions lines of code that can be responsible for many thousands of operations, even affecting life or death situations. <p>Due to the scale, cost, frequency of problems and long timescales involved in Software and Information System development there has to be a \u201cmethodical\u201d approach.  </p> <p>At this level of study you need to be able to describe and compare the following two: Iterative development process (waterfall method) Agile methodologies</p> <p>Info</p> <p>At this level of study you need to be able to describe and compare the following two:</p> <p><p> Iterative Development Process (waterfall method) <p><p>Agile Methodologies"},{"location":"SDD/01-Development-Methodologies/#iterative-development-process-waterfall-model","title":"Iterative Development Process (Waterfall Model)","text":"<p>The Waterfall model is a structured, linear approach to software development. In this methodology, the stages followed include analysis, design, implementation, testing, documentation, evaluation, and maintenance. Although the process is often referred to as iterative because stages can be revisited, one of its main challenges is that these stages are followed sequentially.</p> <p>As development progresses, new ideas and requirements will often emerge that were not foreseen during the initial planning stages. This leads to the need to revisit earlier phases of the project to address new issues and correct errors which slows the development process considerably. </p> <p>As a result, the Waterfall model is often criticized for being overly rigid, slow, and dependent on excessive documentation as each step strictly follows the last.</p>"},{"location":"SDD/01-Development-Methodologies/#agile-methodologies","title":"Agile Methodologies","text":"<p>Agile methodologies generally follow the same development stages (Analysis, Design, Implementation, Testing, Documentation, Evaluation, and Maintenance) but approach them more flexibly. The focus is on quickly getting started while allowing movement between stages as needed. This iterative process enables collaboration between different developer teams, allowing the project\u2019s requirements and solution to evolve step by step.</p> <p>The Agile methodology places a strong emphasis on teamwork, with regular interaction among developers and frequent engagement with clients or users to create prototypes. </p> <p>By showing working prototypes as the system develops, teams can gather real-time feedback, allowing for adjustments and improvements throughout the process. </p> <p>Info</p> <p><p> A key aspect of agile methodologies is their ability to respond to change, recognizing that requirements are often fluid and that software projects are inherently dynamic.) <p>Rapid Application Development (RAD) is one such example of an agile approach to software and information system creation. Its primary goal is to implement solutions quickly, minimizing upfront planning. RAD involves producing incremental versions or prototypes to refine requirements and address issues as they arise.</p> <p>While RAD can significantly reduce development time, it may lead to an overemphasis on the Graphical User Interface (GUI) rather than the core functionality of the software. Continuous iteration can also result in a disorganized process, increased errors, and long-term maintenance challenges. Therefore, RAD is best suited for smaller, dynamic projects like apps or websites, but is less ideal for large-scale or mission-critical systems.</p>"},{"location":"SDD/02-Analysis/","title":"Analysis","text":""},{"location":"SDD/03-Design/","title":"Design","text":""},{"location":"SDD/03-Design/#program-design","title":"Program Design","text":""},{"location":"SDD/03-Design/#structure-diagrams","title":"Structure Diagrams","text":""},{"location":"SDD/03-Design/#flowcharts","title":"Flowcharts","text":""},{"location":"SDD/03-Design/#pseudocode","title":"Pseudocode","text":""},{"location":"SDD/04-Software-Implementation/","title":"Software Implementation","text":""},{"location":"SI/","title":"Software Implementation","text":""},{"location":"SI/01-Sub-Program%20Procedures/","title":"Sub-program Procedures","text":""},{"location":"SI/01-Sub-Program%20Procedures/#modularity","title":"Modularity","text":"<p>Modularity means that when a program is written it is split up into smaller chunks called sub-programs. Imagine a program with millions of lines of. This would be split up into different programming teams to complete. </p> <p>Each of the sub-programs does a specific job. For example one sub-program may be to get user information. Each of the subprograms can be used in any order and can be reused multiple times. </p> <p>Example</p>"},{"location":"SI/01-Sub-Program%20Procedures/#procedures-in-python","title":"Procedures in Python","text":""},{"location":"SI/01-Sub-Program%20Procedures/#what-is-a-procedure","title":"What is a procedure?","text":"<p>We'll use an analogy here. Let's imagine that you're a dishwasher. Your process of washing a dish could be:</p> <ul> <li>Dip the dish into the water</li> <li>Cover every inch of the dish with soap </li> <li>Rinse and dry the dish</li> </ul> <p>So, every time you need to wash a dish, you do just that. Dip, soap, dry. Dip, soap, dry. Dip, soap, dry. Even when you go home, you dip, soap, dry. Dip, soap, dry. It's the same sequence, repeated over and over again. </p> <p>A procedure works the same way. People replace the process of dipping, soaping, and drying with the command \"wash the dishes\". When you call a procedure, it simply does the jobs that the procedure is supposed to do. </p> <p>By replacing a stack of instructions with one single statement, it makes code easier to read and debug. A procedure does not return a value.</p> <p>In Python we give a procedure a name, this is done by giving them a name after the, \u201cdef\u201d instruction. The brackets after the procedure name are used to pass in data that will be used in that block of code. This is known as parameter passing. </p> <p>Info</p> <p>A procedure literally just executes commands.</p>"},{"location":"SI/02-Working-with-Files/","title":"Working with Files","text":""},{"location":"SI/02-Working-with-Files/#explanation","title":"Explanation","text":"<p> In this lesson, we will learn about file handling, which allows our programs to manage large amounts of data efficiently, similar to how real-world systems work.   While it\u2019s useful to create lists, make changes, and add new data, if your program resets every time it runs and your changes are lost, it\u2019s not very practical. That\u2019s why it\u2019s sometimes necessary to save data outside the program, so it can be stored and any changes you make are saved.   In real-world systems that handle huge amounts of data, such as millions of inputs, this data is usually provided to the program through a file. File handling is often called sequential file processing because the program reads the data in the same order it appears in the file, and writes it back in a similar sequence. This ensures that data is saved and retrieved in an organized and efficient way (1). The easiest way to start learning about saving and loading data is by using a text file.    When opening an external file, you need to specify how the file will be used in your program. </p>"},{"location":"SI/02-Working-with-Files/#python-variable-naming-rules","title":"Python Variable Naming Rules","text":"<ul> <li>A variable name must start with a letter or the underscore character</li> <li>A variable name cannot start with a number</li> <li>A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ )</li> <li>Variable names are case-sensitive (age, Age and AGE are three different variables)</li> <li>A variable name cannot be any of the Python keywords.</li> </ul> <p>and although this one is not a rule....</p> <ul> <li>It is important to use meaningful or sensible variable names. </li> </ul>"},{"location":"SI/02-Working-with-Files/#types-of-variables","title":"Types of Variables","text":"<p>In programming variables have a particular type and for National 5 there are five data types that you need to know:</p> Data Type Description Integer Whole number: 12, -50, 100 Real number With a decimal point: 22.5, 0.001 String Words and symbols: hello, abc123 Character A single letter, digit or symbol: a, Z, $, # Boolean True (1) or False (0) <p>Warning</p> <p>Once a variable has been set up with a particular type, you can only assign it data of that type.</p> <p>Example</p> <pre><code># This is an integer\nmyage = int(15)\n\n# This is a real number\nprice = float(0.99)\n\n# This is a string\nfaveSubject = str(\"Computing\")\n\n# This is a character\nfirstInitial = char(\"F\")\n\n# This is a Boolean\nisStudent = bool(1)\n</code></pre>"},{"location":"SI/02-Working-with-Files/#calculations","title":"Calculations","text":"<p>Python programs will often carry out calculations with operators. The result is usually stored in a variable:</p> <p>Example</p> <pre><code>num1 = 5\nnum2 = 7\nsum = num1 + num2\n</code></pre> <p>You can use the following operators:</p> <p>Example</p> <pre><code># Three variables\nnum1 = 5\nnum2 = 7\nsum = 0.0\n\n# Addition\nsum = num1 + num2\n\n# Subtraction\nsum = num1 - num2\n\n# Division\nsum = num1 / num2\n\n# Multiplication\nsum = num1 * num2\n\n# Raise to a power\nsum = num1 ** num2\n\n#Note that \u201craising to the power\u201d means, for example, num1**num2. \n\n#To square or cube a number, you would say:\nsquare = num1 ** 2\ncube = num1 ** 3\n</code></pre>"},{"location":"SI/02-Working-with-Files/#string-concatenation","title":"String Concatenation","text":"<p>String concatenation is the term used when joining two strings.</p> <p>Example</p> <pre><code>word1 = \u201cHello\u201d\nword2 = \u201cWorld\u201d\n\nsentence = word1 + word2\n</code></pre> <p>Tip</p> <p>The example above doesn\u2019t include a space, you would have to add a space to the end of \u201cHello\u201d or the beginning of \u201cWorld\u201d.\u2003</p>"},{"location":"SI/03-Working-with-Records/","title":"Working with Records","text":""},{"location":"SI/03-Working-with-Records/#explanation","title":"Explanation","text":"<p> So far, we\u2019ve used only one type of data structure to store multiple values: the array.    Remember, an array is like a list of related variables that all share the same data type. For example,  an array could store a list of numbers or a list of names, but not both.   In real-world systems that handle huge amounts of data, such as millions of inputs, this data is usually provided to the program through a file. File handling is often called sequential file processing because the program reads the data in the same order it appears in the file, and writes it back in a similar sequence. This ensures that data is saved and retrieved in an organized and efficient way (1). The easiest way to start learning about saving and loading data is by using a text file.    When opening an external file, you need to specify how the file will be used in your program. </p> <p>Below I have detailed how to do this.</p> <p>Example</p> <pre><code>x = 5\ny = 2\n</code></pre> <p>You will already have used similar in Maths. What is x + y? (the answer is 7)</p> <p>In computing however, we usually give them a longer (more meaningful) name, such as:</p> <p>Example</p> <pre><code>age = 15\nname = \"Bob\"\nemail = \"bob@gmail.com\"\n</code></pre>"},{"location":"SI/03-Working-with-Records/#python-variable-naming-rules","title":"Python Variable Naming Rules","text":"<ul> <li>A variable name must start with a letter or the underscore character</li> <li>A variable name cannot start with a number</li> <li>A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ )</li> <li>Variable names are case-sensitive (age, Age and AGE are three different variables)</li> <li>A variable name cannot be any of the Python keywords.</li> </ul> <p>and although this one is not a rule....</p> <ul> <li>It is important to use meaningful or sensible variable names. </li> </ul>"},{"location":"SI/03-Working-with-Records/#types-of-variables","title":"Types of Variables","text":"<p>In programming variables have a particular type and for National 5 there are five data types that you need to know:</p> Data Type Description Integer Whole number: 12, -50, 100 Real number With a decimal point: 22.5, 0.001 String Words and symbols: hello, abc123 Character A single letter, digit or symbol: a, Z, $, # Boolean True (1) or False (0) <p>Warning</p> <p>Once a variable has been set up with a particular type, you can only assign it data of that type.</p> <p>Example</p> <pre><code># This is an integer\nmyage = int(15)\n\n# This is a real number\nprice = float(0.99)\n\n# This is a string\nfaveSubject = str(\"Computing\")\n\n# This is a character\nfirstInitial = char(\"F\")\n\n# This is a Boolean\nisStudent = bool(1)\n</code></pre>"},{"location":"SI/03-Working-with-Records/#calculations","title":"Calculations","text":"<p>Python programs will often carry out calculations with operators. The result is usually stored in a variable:</p> <p>Example</p> <pre><code>num1 = 5\nnum2 = 7\nsum = num1 + num2\n</code></pre> <p>You can use the following operators:</p> <p>Example</p> <pre><code># Three variables\nnum1 = 5\nnum2 = 7\nsum = 0.0\n\n# Addition\nsum = num1 + num2\n\n# Subtraction\nsum = num1 - num2\n\n# Division\nsum = num1 / num2\n\n# Multiplication\nsum = num1 * num2\n\n# Raise to a power\nsum = num1 ** num2\n\n#Note that \u201craising to the power\u201d means, for example, num1**num2. \n\n#To square or cube a number, you would say:\nsquare = num1 ** 2\ncube = num1 ** 3\n</code></pre>"},{"location":"SI/03-Working-with-Records/#string-concatenation","title":"String Concatenation","text":"<p>String concatenation is the term used when joining two strings.</p> <p>Example</p> <pre><code>word1 = \u201cHello\u201d\nword2 = \u201cWorld\u201d\n\nsentence = word1 + word2\n</code></pre> <p>Tip</p> <p>The example above doesn\u2019t include a space, you would have to add a space to the end of \u201cHello\u201d or the beginning of \u201cWorld\u201d.\u2003</p>"}]}